#!/bin/bash
# Author: Nozdormv
# Purpose: VM Management Script
# Version: 1.0.0

userinput="${1}"
userinput2="${2}"

# Update de server vm

if [ "${userinput}" == "server"  ]|[ "${userinput2}" == "update"  ]; then
	echo -e ""
	read -r -p "Do you want to update the VM? [Y/n] " input
	 
	case $input in
		  [yY][eE][sS]|[yY])
				sudo apt-get update ; sudo apt-get upgrade
				echo -e ""
				echo -e "\033[4;33m Server updated \033[0m"
				;;
		  [nN][oO]|[nN])
				echo "Quiting"
				;;
		  *)
				echo "Invalid input..."
				exit 1
				;;
	esac
	echo -e "================================="
fi

# Install Screen

if [ "${userinput}" == "screen"  ]; then
	echo -e ""
	echo -e "Screen Commands : https://linuxize.com/post/how-to-use-linux-screen/"
	echo -e "screen install : Install screen"
	echo -e "screen -version : Check screen version"
	echo -e "================================="
fi

if [ "${userinput}" == "screen"  ]|[ "${userinput2}" == "install"  ]; then
	echo -e ""
	read -r -p "Do you want to install screen? [Y/n] " input
	 
	case $input in
		  [yY][eE][sS]|[yY])
				sudo apt-get update ; sudo apt-get install screen
				echo -e ""
				echo -e "\033[4;33m Screen installed \033[0m"
				echo -e "Check screen version with: screen -v"
				;;
		  [nN][oO]|[nN])
				echo "Quiting"
				;;
		  *)
				echo "Invalid input..."
				exit 1
				;;
	esac
	echo -e "================================="
fi

# Install zip

if [ "${userinput}" == "zip"  ]|[ "${userinput2}" == "install"  ]; then
	echo -e ""
	read -r -p "Do you want to install zip? [Y/n] " input
	 
	case $input in
		  [yY][eE][sS]|[yY])
				sudo apt install zip ; sudo apt install unzip
				echo -e ""
				echo -e "\033[4;33m Zip installed \033[0m"
				echo -e "Check zip version with: zip -v"
				echo -e "Compress a file with: zip -r name.zip file"
				;;
		  [nN][oO]|[nN])
				echo "Quiting"
				;;
		  *)
				echo "Invalid input..."
				exit 1
				;;
	esac
	echo -e "================================="
fi

# Install gzip

if [ "${userinput}" == "gzip"  ]|[ "${userinput2}" == "install"  ]; then
	echo -e ""
	read -r -p "Do you want to install gzip? [Y/n] " input
	 
	case $input in
		  [yY][eE][sS]|[yY])
				sudo apt install gzip
				echo -e ""
				echo -e "\033[4;33m gzip installed \033[0m"
				echo -e "Check gzip version with: gzip -v"
				;;
		  [nN][oO]|[nN])
				echo "Quiting"
				;;
		  *)
				echo "Invalid input..."
				exit 1
				;;
	esac
	echo -e "================================="
fi

# Install curl

if [ "${userinput}" == "curl"  ]|[ "${userinput2}" == "install"  ]; then
	echo -e ""
	read -r -p "Do you want to install curl? [Y/n] " input
	 
	case $input in
		  [yY][eE][sS]|[yY])
				sudo apt install curl
				echo -e ""
				echo -e "\033[4;33m curl installed \033[0m"
				echo -e "Check gzip version with: curl --version"
				;;
		  [nN][oO]|[nN])
				echo "Quiting"
				;;
		  *)
				echo "Invalid input..."
				exit 1
				;;
	esac
	echo -e "================================="
fi

# Install LinuxGSM

if [ "${userinput}" == "linuxgsm"  ]; then
	echo -e ""
	echo -e "Use LinuxGSM here : https://linuxgsm.com/"
	echo -e "================================="
fi

# Install NodeJS

if [ "${userinput}" == "nodejs"  ]|[ "${userinput2}" == "install"  ]; then
	echo -e ""
	read -r -p "Do you want to install NodeJS? [Y/n] " input
	 
	case $input in
		  [yY][eE][sS]|[yY])
				sudo apt update ; sudo apt install -y nodejs
				echo -e ""
				echo -e "\033[4;33m NodeJS installed \033[0m"
				;;
		  [nN][oO]|[nN])
				echo "Quiting"
				;;
		  *)
				echo "Invalid input..."
				exit 1
				;;
	esac
	echo -e "================================="
fi

# Add a user to sudoers folder

if [ "${userinput}" == "sudoers"  ]|[ "${userinput2}" == "add"  ]; then
	echo -e ""
	echo -e "Enter user name"
	read user
	usermod -aG sudo $user
	echo -e "$user added to sudoers"
	echo -e "================================="
fi

# Open a port

if [ "${userinput}" == "port"  ]|[ "${userinput2}" == "open"  ]; then
	echo -e ""
	echo -e "Enter port"
	read port
	sudo ufw allow $port
	echo -e "$user port open"
	echo -e "================================="
fi

# Close a port

if [ "${userinput}" == "port"  ]|[ "${userinput2}" == "close"  ]; then
	echo -e ""
	echo -e "Enter port"
	read port
	sudo ufw deny $port
	echo -e "$user port closed"
	echo -e "================================="
fi

# Install Java JDk

if [ "${userinput}" == "java"  ]|[ "${userinput2}" == "install"  ]; then
	echo -e ""
	read -r -p "Do you want to install Java 17 JDK? [Y/n] " input
	 
	case $input in
		  [yY][eE][sS]|[yY])
				sudo apt-get install openjdk-17-jdk
				echo -e ""
				echo -e "\033[4;33m openjdk 17 installed \033[0m"
				echo -e "Check java version: java --version"
				;;
		  [nN][oO]|[nN])
				echo "Quiting"
				;;
		  *)
				echo "Invalid input..."
				exit 1
				;;
	esac
	echo -e "================================="
fi

# Update VMSM

if [ "${userinput}" == "update"  ]; then
	echo -e ""
	git clone https://github.com/byronbutlerorg/vmsm.git
	echo -e "VMSM updated"
	echo -e "================================="
fi

# Add new user

if [ "${userinput}" == "user"  ]|[ "${userinput2}" == "add"  ]; then
	echo -e ""
	echo -e "Enter username"
	read username
	adduser $username
	echo -e "$user user added"
	echo -e "================================="
fi

# Remove user

if [ "${userinput}" == "user"  ]|[ "${userinput2}" == "remove"  ]; then
	echo -e ""
	echo -e "Enter username"
	read username
	deluser $username
	echo -e "$user user removed"
	echo -e "================================="
fi

