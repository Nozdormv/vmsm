#!/bin/bash
# Author: Nozdormv
# Purpose: VM Management Script
# Version: 1.0.0

userinput="${1}"
userinput2="${2}"

# Server first setup

if [ "${userinput}" == "server"  ] && [ "${userinput2}" == "setup"  ]; then
	echo -e ""
	read -r -p "Do you want to first setup the VM? [Y/n] " input
	 
	case $input in
		  [yY][eE][sS]|[yY])
				sudo apt-get update; sudo apt-get upgrade;
				sleep 0.3
				echo -e ""
				echo -e "Installing Screen"
				echo -e ""
				sudo apt-get install screen
				sleep 0.3
				echo -e ""
				echo -e "Installing ZIP"
				echo -e ""
				sudo apt install zip; sudo apt install unzip
				sleep 0.3
				echo -e ""
				echo -e "Installing Curl"
				echo -e ""
				sudo apt install curl
				sleep 0.3
				echo -e ""
				echo -e "Installing NodeJS"
				echo -e ""
				sudo apt install -y nodejs
				sleep 0.3
				echo -e ""
				echo -e "Installing Java 17 JDK"
				echo -e ""
				sudo apt-get install openjdk-17-jdk
				sleep 0.3
				echo -e ""
				echo -e "\033[4;33m Server setup done. \033[0m"
				;;
		  [nN][oO]|[nN])
				echo "Quiting"
				;;
		  *)
				echo "Invalid input..."
				exit 1
				;;
	esac
	echo -e "================================="
fi

# Update de server vm

if [ "${userinput}" == "server"  ] && [ "${userinput2}" == "update"  ]; then
	echo -e ""
	read -r -p "Do you want to update the VM? [Y/n] " input
	 
	case $input in
		  [yY][eE][sS]|[yY])
				sudo apt-get update ; sudo apt-get upgrade
				echo -e ""
				echo -e "\033[4;33m Server updated \033[0m"
				;;
		  [nN][oO]|[nN])
				echo "Quiting"
				;;
		  *)
				echo "Invalid input..."
				exit 1
				;;
	esac
	echo -e "================================="
fi

# Install Screen

if [ "${userinput}" == "screen"  ] && [ "${userinput2}" == "help"  ]; then
	echo -e ""
	echo -e "Screen Commands : https://linuxize.com/post/how-to-use-linux-screen/"
	echo -e "screen install : Install screen"
	echo -e "screen -version : Check screen version"
	echo -e "================================="
fi

if [ "${userinput}" == "screen"  ] && [ "${userinput2}" == "install"  ]; then
	echo -e ""
	read -r -p "Do you want to install screen? [Y/n] " input
	 
	case $input in
		  [yY][eE][sS]|[yY])
				sudo apt-get update ; sudo apt-get install screen
				echo -e ""
				echo -e "\033[4;33m Screen installed \033[0m"
				echo -e "Check screen version with: screen -v"
				;;
		  [nN][oO]|[nN])
				echo "Quiting"
				;;
		  *)
				echo "Invalid input..."
				exit 1
				;;
	esac
	echo -e "================================="
fi

# Install zip

if [ "${userinput}" == "zip"  ] && [ "${userinput2}" == "install"  ]; then
	echo -e ""
	read -r -p "Do you want to install zip? [Y/n] " input
	 
	case $input in
		  [yY][eE][sS]|[yY])
				sudo apt install zip ; sudo apt install unzip
				echo -e ""
				echo -e "\033[4;33m Zip installed \033[0m"
				echo -e "Check zip version with: zip -v"
				echo -e "Compress a file with: zip -r name.zip file"
				;;
		  [nN][oO]|[nN])
				echo "Quiting"
				;;
		  *)
				echo "Invalid input..."
				exit 1
				;;
	esac
	echo -e "================================="
fi

# Install gzip

if [ "${userinput}" == "gzip"  ] && [ "${userinput2}" == "install"  ]; then
	echo -e ""
	read -r -p "Do you want to install gzip? [Y/n] " input
	 
	case $input in
		  [yY][eE][sS]|[yY])
				sudo apt install gzip
				echo -e ""
				echo -e "\033[4;33m gzip installed \033[0m"
				echo -e "Check gzip version with: gzip -v"
				;;
		  [nN][oO]|[nN])
				echo "Quiting"
				;;
		  *)
				echo "Invalid input..."
				exit 1
				;;
	esac
	echo -e "================================="
fi

# Install curl

if [ "${userinput}" == "curl"  ] && [ "${userinput2}" == "install"  ]; then
	echo -e ""
	read -r -p "Do you want to install curl? [Y/n] " input
	 
	case $input in
		  [yY][eE][sS]|[yY])
				sudo apt install curl
				echo -e ""
				echo -e "\033[4;33m curl installed \033[0m"
				echo -e "Check gzip version with: curl --version"
				;;
		  [nN][oO]|[nN])
				echo "Quiting"
				;;
		  *)
				echo "Invalid input..."
				exit 1
				;;
	esac
	echo -e "================================="
fi

# Install NodeJS

if [ "${userinput}" == "nodejs"  ] && [ "${userinput2}" == "install"  ]; then
	echo -e ""
	read -r -p "Do you want to install NodeJS? [Y/n] " input
	 
	case $input in
		  [yY][eE][sS]|[yY])
				sudo apt update ; sudo apt install -y nodejs
				echo -e ""
				echo -e "\033[4;33m NodeJS installed \033[0m"
				;;
		  [nN][oO]|[nN])
				echo "Quiting"
				;;
		  *)
				echo "Invalid input..."
				exit 1
				;;
	esac
	echo -e "================================="
fi

# Add a user to sudoers folder

if [ "${userinput}" == "sudoers"  ] && [ "${userinput2}" == "add"  ]; then
	echo -e ""
	echo -e "Enter user name"
	read user
	usermod -aG sudo $user
	echo -e "$user added to sudoers"
	echo -e "================================="
fi

# Open a port

if [ "${userinput}" == "port"  ] && [ "${userinput2}" == "open"  ]; then
	echo -e ""
	echo -e "Enter port"
	read port
	sudo ufw allow $port
	echo -e "$user port open"
	echo -e "================================="
fi

# Close a port

if [ "${userinput}" == "port"  ] && [ "${userinput2}" == "close"  ]; then
	echo -e ""
	echo -e "Enter port"
	read port
	sudo ufw deny $port
	echo -e "$user port closed"
	echo -e "================================="
fi

# Install Java JDk

if [ "${userinput}" == "java"  ] && [ "${userinput2}" == "install"  ]; then
	echo -e ""
	read -r -p "Do you want to install Java 17 JDK? [Y/n] " input
	 
	case $input in
		  [yY][eE][sS]|[yY])
				sudo apt-get install openjdk-17-jdk
				echo -e ""
				echo -e "\033[4;33m openjdk 17 installed \033[0m"
				echo -e "Check java version: java --version"
				;;
		  [nN][oO]|[nN])
				echo "Quiting"
				;;
		  *)
				echo "Invalid input..."
				exit 1
				;;
	esac
	echo -e "================================="
fi

# Update VMSM

if [ "${userinput}" == "update"  ]; then
	echo -e ""
	git clone https://github.com/byronbutlerorg/vmsm.git
	echo -e "VMSM updated"
	echo -e ""
	echo -e "================================="
fi

# Add new user

if [ "${userinput}" == "user"  ] && [ "${userinput2}" == "add"  ]; then
	echo -e ""
	echo -e "Enter username"
	read username
	adduser $username
	echo -e "$user user added"
	echo -e "================================="
fi

# Remove user

if [ "${userinput}" == "user"  ] && [ "${userinput2}" == "remove"  ]; then
	echo -e ""
	echo -e "Enter username"
	read username
	deluser $username
	echo -e "$user user removed"
	echo -e "================================="
fi

# Help LinuxGSM

if [ "${userinput}" == "linuxgsm"  ] && [ "${userinput2}" == "help"  ]; then
	echo -e ""
	echo -e "Create server games using LinuxGSM"
	echo -e "https://linuxgsm.com/servers/"
	echo -e "Use 'linuxgsm gamename' to start the installation."
	echo -e "================================="
fi

# Install LinuxGSM

if [ "${userinput}" == "linuxgsm"  ] && [ "${userinput2}" == "install"  ]; then
	echo -e ""
	echo -e "LinuxGSM: What server game do you like to install?"
	read game
	if [ "$game" == "minecraft" ]; then
		echo -e ""
		echo -e "Installing Minecraft Java for Ubuntu 20.10"
		echo -e "[\033[1;33m WARN \033[0m] Remember to create a new user and add it to sudoers file before run this command."
"
		
		read -r -p "Continue? [Y/n] " input
		 
		case $input in
			  [yY][eE][sS]|[yY])
					sudo dpkg --add-architecture i386; sudo apt update; sudo apt install curl wget file tar bzip2 gzip unzip bsdmainutils python3 util-linux ca-certificates binutils bc jq tmux netcat openjdk-17-jre
					sleep 0.3
					echo -e ""
					echo -e "Installing GameDig"
					echo -e ""
					curl -fsSL https://deb.nodesource.com/setup_16.x | sudo -E bash -
					sudo apt update && sudo apt install -y nodejs
					sleep 0.3
					npm install gamedig -g
					sleep 0.3
					echo -e "Downloading linuxgsm.sh"
					echo -e ""
					wget -O linuxgsm.sh https://linuxgsm.sh && chmod +x linuxgsm.sh && bash linuxgsm.sh mcserver
					sleep 0.3
					echo -e "Installing Minecraft Java edition"
					echo -e ""
					./mcserver install
					sleep 0.3
					echo -e "LinuxGSM Minecraft java edition installation done."
					;;
			  [nN][oO]|[nN])
					echo "Quiting"
					;;
			  *)
					echo "Invalid input..."
					exit 1
					;;
		esac


		elif [ "$game" == "rust" ]; then
			echo -e ""
			echo -e "Installing Rust for Ubuntu 20.10"
			echo -e "[\033[1;33m WARN \033[0m] Remember to create a new user and add it to sudoers file before run this command."
	"
			
			read -r -p "Continue? [Y/n] " input
			 
			case $input in
				  [yY][eE][sS]|[yY])
						sudo dpkg --add-architecture i386; sudo apt update; sudo apt install curl wget file tar bzip2 gzip unzip bsdmainutils python3 util-linux ca-certificates binutils bc jq tmux netcat lib32gcc-s1 lib32stdc++6 libsdl2-2.0-0:i386 steamcmd lib32z1
						sleep 0.3
						echo -e ""
						echo -e "Installing GameDig"
						echo -e ""
						curl -fsSL https://deb.nodesource.com/setup_16.x | sudo -E bash -
						sudo apt update && sudo apt install -y nodejs
						sleep 0.3
						npm install gamedig -g
						sleep 0.3
						echo -e "Downloading linuxgsm.sh"
						echo -e ""
						wget -O linuxgsm.sh https://linuxgsm.sh && chmod +x linuxgsm.sh && bash linuxgsm.sh rustserver
						sleep 0.3
						echo -e "Installing Minecraft Java edition"
						echo -e ""
						./rustserver install
						sleep 0.3
						echo -e "LinuxGSM Rust installation done."
						;;
				  [nN][oO]|[nN])
						echo "Quiting"
						;;
				  *)
						echo "Invalid input..."
						exit 1
						;;
			esac
			
					elif [ "$game" == "7days" ]; then
			echo -e ""
			echo -e "Installing 7 Days to die for Ubuntu 20.10"
			echo -e "[\033[1;33m WARN \033[0m] Remember to create a new user named "sdtdserver" and add it to sudoers file before run this command."
	"
			
			read -r -p "Continue? [Y/n] " input
			 
			case $input in
				  [yY][eE][sS]|[yY])
						sudo dpkg --add-architecture i386; sudo apt update; sudo apt install curl wget file tar bzip2 gzip unzip bsdmainutils python3 util-linux ca-certificates binutils bc jq tmux netcat lib32gcc-s1 lib32stdc++6 libsdl2-2.0-0:i386 steamcmd telnet expect
						sleep 0.3
						echo -e ""
						echo -e "Installing GameDig"
						echo -e ""
						curl -fsSL https://deb.nodesource.com/setup_16.x | sudo -E bash -
						sudo apt update && sudo apt install -y nodejs
						sleep 0.3
						npm install gamedig -g
						sleep 0.3
						echo -e "Downloading linuxgsm.sh"
						echo -e ""
						wget -O linuxgsm.sh https://linuxgsm.sh && chmod +x linuxgsm.sh && bash linuxgsm.sh sdtdserver
						sleep 0.3
						echo -e "Installing 7 Days to die"
						echo -e ""
						./sdtdserver install
						sleep 0.3
						echo -e "LinuxGSM 7 Days to die installation done."
						;;
				  [nN][oO]|[nN])
						echo "Quiting"
						;;
				  *)
						echo "Invalid input..."
						exit 1
						;;
			esac

	fi
	echo -e "================================="
fi
